// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: GrpcTccEvent.proto

package sagagrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcTccTransactionStartedEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,5,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcTccTransactionStartedEvent) Reset()         { *m = GrpcTccTransactionStartedEvent{} }
func (m *GrpcTccTransactionStartedEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcTccTransactionStartedEvent) ProtoMessage()    {}
func (*GrpcTccTransactionStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{0}
}
func (m *GrpcTccTransactionStartedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcTccTransactionStartedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcTccTransactionStartedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcTccTransactionStartedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcTccTransactionStartedEvent.Merge(m, src)
}
func (m *GrpcTccTransactionStartedEvent) XXX_Size() int {
	return m.Size()
}
func (m *GrpcTccTransactionStartedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcTccTransactionStartedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcTccTransactionStartedEvent proto.InternalMessageInfo

func (m *GrpcTccTransactionStartedEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcTccTransactionStartedEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcTccTransactionStartedEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcTccTransactionStartedEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcTccTransactionStartedEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcTccTransactionStartedEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type GrpcParticipationStartedEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,5,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	ConfirmMethod        string   `protobuf:"bytes,7,opt,name=confirmMethod,proto3" json:"confirmMethod,omitempty"`
	CancelMethod         string   `protobuf:"bytes,8,opt,name=cancelMethod,proto3" json:"cancelMethod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcParticipationStartedEvent) Reset()         { *m = GrpcParticipationStartedEvent{} }
func (m *GrpcParticipationStartedEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcParticipationStartedEvent) ProtoMessage()    {}
func (*GrpcParticipationStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{1}
}
func (m *GrpcParticipationStartedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcParticipationStartedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcParticipationStartedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcParticipationStartedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcParticipationStartedEvent.Merge(m, src)
}
func (m *GrpcParticipationStartedEvent) XXX_Size() int {
	return m.Size()
}
func (m *GrpcParticipationStartedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcParticipationStartedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcParticipationStartedEvent proto.InternalMessageInfo

func (m *GrpcParticipationStartedEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcParticipationStartedEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetConfirmMethod() string {
	if m != nil {
		return m.ConfirmMethod
	}
	return ""
}

func (m *GrpcParticipationStartedEvent) GetCancelMethod() string {
	if m != nil {
		return m.CancelMethod
	}
	return ""
}

type GrpcParticipationEndedEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,5,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	ConfirmMethod        string   `protobuf:"bytes,7,opt,name=confirmMethod,proto3" json:"confirmMethod,omitempty"`
	CancelMethod         string   `protobuf:"bytes,8,opt,name=cancelMethod,proto3" json:"cancelMethod,omitempty"`
	Status               string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcParticipationEndedEvent) Reset()         { *m = GrpcParticipationEndedEvent{} }
func (m *GrpcParticipationEndedEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcParticipationEndedEvent) ProtoMessage()    {}
func (*GrpcParticipationEndedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{2}
}
func (m *GrpcParticipationEndedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcParticipationEndedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcParticipationEndedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcParticipationEndedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcParticipationEndedEvent.Merge(m, src)
}
func (m *GrpcParticipationEndedEvent) XXX_Size() int {
	return m.Size()
}
func (m *GrpcParticipationEndedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcParticipationEndedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcParticipationEndedEvent proto.InternalMessageInfo

func (m *GrpcParticipationEndedEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcParticipationEndedEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetConfirmMethod() string {
	if m != nil {
		return m.ConfirmMethod
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetCancelMethod() string {
	if m != nil {
		return m.CancelMethod
	}
	return ""
}

func (m *GrpcParticipationEndedEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GrpcTccTransactionEndedEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,5,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcTccTransactionEndedEvent) Reset()         { *m = GrpcTccTransactionEndedEvent{} }
func (m *GrpcTccTransactionEndedEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcTccTransactionEndedEvent) ProtoMessage()    {}
func (*GrpcTccTransactionEndedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{3}
}
func (m *GrpcTccTransactionEndedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcTccTransactionEndedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcTccTransactionEndedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcTccTransactionEndedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcTccTransactionEndedEvent.Merge(m, src)
}
func (m *GrpcTccTransactionEndedEvent) XXX_Size() int {
	return m.Size()
}
func (m *GrpcTccTransactionEndedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcTccTransactionEndedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcTccTransactionEndedEvent proto.InternalMessageInfo

func (m *GrpcTccTransactionEndedEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcTccTransactionEndedEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcTccTransactionEndedEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcTccTransactionEndedEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcTccTransactionEndedEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcTccTransactionEndedEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GrpcTccTransactionEndedEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GrpcTccCoordinatedEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,5,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,6,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	MethodName           string   `protobuf:"bytes,7,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcTccCoordinatedEvent) Reset()         { *m = GrpcTccCoordinatedEvent{} }
func (m *GrpcTccCoordinatedEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcTccCoordinatedEvent) ProtoMessage()    {}
func (*GrpcTccCoordinatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{4}
}
func (m *GrpcTccCoordinatedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcTccCoordinatedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcTccCoordinatedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcTccCoordinatedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcTccCoordinatedEvent.Merge(m, src)
}
func (m *GrpcTccCoordinatedEvent) XXX_Size() int {
	return m.Size()
}
func (m *GrpcTccCoordinatedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcTccCoordinatedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcTccCoordinatedEvent proto.InternalMessageInfo

func (m *GrpcTccCoordinatedEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcTccCoordinatedEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *GrpcTccCoordinatedEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GrpcTccCoordinateCommand struct {
	GlobalTxId           string   `protobuf:"bytes,1,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,2,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,3,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	ServiceName          string   `protobuf:"bytes,4,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	Method               string   `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcTccCoordinateCommand) Reset()         { *m = GrpcTccCoordinateCommand{} }
func (m *GrpcTccCoordinateCommand) String() string { return proto.CompactTextString(m) }
func (*GrpcTccCoordinateCommand) ProtoMessage()    {}
func (*GrpcTccCoordinateCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b6ddd2bd5f65260, []int{5}
}
func (m *GrpcTccCoordinateCommand) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GrpcTccCoordinateCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GrpcTccCoordinateCommand.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GrpcTccCoordinateCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcTccCoordinateCommand.Merge(m, src)
}
func (m *GrpcTccCoordinateCommand) XXX_Size() int {
	return m.Size()
}
func (m *GrpcTccCoordinateCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcTccCoordinateCommand.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcTccCoordinateCommand proto.InternalMessageInfo

func (m *GrpcTccCoordinateCommand) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcTccCoordinateCommand) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcTccCoordinateCommand) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcTccCoordinateCommand) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcTccCoordinateCommand) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func init() {
	proto.RegisterType((*GrpcTccTransactionStartedEvent)(nil), "GrpcTccTransactionStartedEvent")
	proto.RegisterType((*GrpcParticipationStartedEvent)(nil), "GrpcParticipationStartedEvent")
	proto.RegisterType((*GrpcParticipationEndedEvent)(nil), "GrpcParticipationEndedEvent")
	proto.RegisterType((*GrpcTccTransactionEndedEvent)(nil), "GrpcTccTransactionEndedEvent")
	proto.RegisterType((*GrpcTccCoordinatedEvent)(nil), "GrpcTccCoordinatedEvent")
	proto.RegisterType((*GrpcTccCoordinateCommand)(nil), "GrpcTccCoordinateCommand")
}

func init() { proto.RegisterFile("GrpcTccEvent.proto", fileDescriptor_2b6ddd2bd5f65260) }

var fileDescriptor_2b6ddd2bd5f65260 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x96, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x7b, 0x4e, 0x49, 0x93, 0x57, 0x0a, 0xd5, 0x09, 0x52, 0x13, 0x52, 0x13, 0x59, 0x0c,
	0x65, 0x39, 0x55, 0xb0, 0x20, 0xb1, 0x94, 0xa4, 0x05, 0x75, 0x80, 0x44, 0x6d, 0x06, 0xc4, 0x76,
	0x39, 0x1f, 0xae, 0xd5, 0xf8, 0xce, 0x3a, 0x1f, 0x15, 0xdf, 0x82, 0x95, 0x6f, 0xc0, 0xce, 0xce,
	0xce, 0x88, 0xc4, 0x8e, 0x50, 0xf8, 0x0a, 0x7c, 0x00, 0x74, 0x67, 0x57, 0xb6, 0x93, 0xd6, 0xec,
	0x11, 0xa3, 0xff, 0xef, 0xbd, 0xbf, 0xfc, 0x7b, 0xf6, 0x7b, 0x77, 0x80, 0x5f, 0xaa, 0x84, 0x4d,
	0x18, 0x3b, 0xba, 0xe0, 0x42, 0x93, 0x44, 0x49, 0x2d, 0xbb, 0xdb, 0x46, 0x1b, 0xca, 0x38, 0x96,
	0x22, 0x53, 0xfc, 0x9f, 0x08, 0xbc, 0x3c, 0x71, 0xa2, 0xa8, 0x48, 0x29, 0xd3, 0x91, 0x14, 0xa7,
	0x9a, 0x2a, 0xcd, 0x03, 0x5b, 0x8a, 0x7b, 0xd0, 0xd6, 0x51, 0xcc, 0x53, 0x4d, 0xe3, 0xc4, 0x45,
	0x7d, 0xb4, 0xd7, 0x38, 0x29, 0x04, 0xec, 0x01, 0x84, 0x33, 0x39, 0xa5, 0xb3, 0xc9, 0x87, 0xe3,
	0xc0, 0x75, 0xfa, 0x68, 0xaf, 0x7d, 0x52, 0x52, 0x4c, 0xf5, 0x4c, 0xb2, 0x3c, 0xdc, 0xb0, 0xe1,
	0x42, 0x30, 0xd5, 0x09, 0x55, 0x5c, 0x68, 0x1b, 0x5e, 0xcf, 0xaa, 0x0b, 0x05, 0xf7, 0x61, 0x33,
	0xe5, 0xea, 0x22, 0x62, 0xfc, 0x35, 0x8d, 0xb9, 0x7b, 0xc3, 0x26, 0x94, 0x25, 0xe3, 0x10, 0x89,
	0x54, 0x53, 0xc1, 0xf8, 0x71, 0xe0, 0x36, 0x33, 0x87, 0x42, 0xf1, 0x3f, 0x3b, 0xb0, 0x6b, 0x00,
	0xc7, 0x54, 0xe9, 0x88, 0x45, 0x09, 0x5d, 0x2d, 0x3e, 0xfc, 0x10, 0xb6, 0x98, 0x14, 0xef, 0x22,
	0x15, 0xbf, 0xe2, 0xfa, 0x4c, 0x06, 0xee, 0x86, 0x4d, 0xa9, 0x8a, 0xd8, 0x87, 0x9b, 0xcc, 0x14,
	0xcc, 0xf2, 0xa4, 0x96, 0x4d, 0xaa, 0x68, 0xfe, 0x57, 0x07, 0xee, 0x2f, 0x75, 0xea, 0x48, 0x04,
	0xff, 0xfb, 0x54, 0xd1, 0x70, 0x07, 0x9a, 0xa9, 0xa6, 0xfa, 0x7d, 0xea, 0xb6, 0x6d, 0x34, 0x7f,
	0xf2, 0xff, 0x20, 0xe8, 0x2d, 0x8f, 0xd2, 0xca, 0x34, 0xb0, 0xc0, 0xde, 0xa8, 0x60, 0x7f, 0x74,
	0x60, 0x27, 0xc7, 0x1e, 0x4a, 0xa9, 0x82, 0x48, 0xd0, 0x15, 0x19, 0x2d, 0x0f, 0x20, 0xb6, 0x9f,
	0xdc, 0x1a, 0x64, 0xd4, 0x25, 0xa5, 0xd4, 0x91, 0x56, 0xa5, 0x23, 0x5f, 0x10, 0xb8, 0x4b, 0x1d,
	0x31, 0x5b, 0x97, 0x8a, 0x60, 0x01, 0x1a, 0xd5, 0x43, 0x3b, 0xf5, 0xd0, 0x8d, 0x7f, 0x41, 0xaf,
	0x2f, 0x43, 0x77, 0xa0, 0x99, 0x21, 0xe4, 0x1d, 0xc9, 0x9f, 0x1e, 0xff, 0x68, 0xc0, 0xed, 0xcb,
	0xd3, 0xe2, 0x34, 0xcb, 0xc7, 0x07, 0xb0, 0x39, 0x12, 0x43, 0x29, 0x04, 0x67, 0x9a, 0x07, 0x18,
	0x13, 0x43, 0x95, 0x07, 0x87, 0x66, 0x6e, 0xc2, 0xee, 0x3d, 0x72, 0x1d, 0xa9, 0xbf, 0xb6, 0x8f,
	0xf0, 0x21, 0x74, 0x46, 0xe2, 0xaa, 0xd5, 0x8b, 0x3d, 0x52, 0xbb, 0x95, 0xbb, 0x2d, 0x1b, 0x7f,
	0xce, 0xce, 0xfd, 0x35, 0x7c, 0x00, 0x77, 0x16, 0x5c, 0xec, 0x54, 0xe1, 0x1e, 0xa9, 0xd9, 0x57,
	0x15, 0x87, 0x17, 0xb0, 0x33, 0x12, 0x57, 0x9e, 0x71, 0xf8, 0x01, 0xa9, 0x3f, 0xff, 0x2a, 0x3e,
	0x03, 0xb8, 0xbb, 0xe8, 0x93, 0xbd, 0xca, 0x2e, 0xa9, 0x1b, 0xfd, 0x8a, 0xc7, 0x53, 0xd8, 0xb6,
	0x1e, 0xa5, 0x69, 0xc1, 0x2e, 0xb9, 0x66, 0x84, 0x2a, 0x95, 0xfb, 0x70, 0x6b, 0x24, 0x0e, 0xa3,
	0x94, 0xd5, 0x7e, 0x92, 0x52, 0xc5, 0xe0, 0xcd, 0xb7, 0xb9, 0x87, 0xbe, 0xcf, 0x3d, 0xf4, 0x6b,
	0xee, 0xa1, 0x4f, 0xbf, 0xbd, 0x35, 0x78, 0x24, 0x55, 0x48, 0x68, 0x42, 0xd9, 0x19, 0x27, 0xf9,
	0x7f, 0xc1, 0x64, 0x3c, 0x25, 0x09, 0x65, 0xe7, 0x84, 0x49, 0xa1, 0x15, 0x65, 0x9a, 0x84, 0x2a,
	0x61, 0x83, 0xad, 0xcb, 0xff, 0x61, 0x6c, 0xae, 0x0a, 0x63, 0xf4, 0x16, 0xc8, 0xb3, 0x94, 0x86,
	0xd4, 0x04, 0xa7, 0x4d, 0x7b, 0x7f, 0x78, 0xf2, 0x37, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x9e, 0x0d,
	0x99, 0x67, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TccEventServiceClient is the client API for TccEventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TccEventServiceClient interface {
	OnConnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (TccEventService_OnConnectedClient, error)
	OnParticipationStarted(ctx context.Context, in *GrpcParticipationStartedEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnParticipationEnded(ctx context.Context, in *GrpcParticipationEndedEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnTccTransactionStarted(ctx context.Context, in *GrpcTccTransactionStartedEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnTccTransactionEnded(ctx context.Context, in *GrpcTccTransactionEndedEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnTccCoordinated(ctx context.Context, in *GrpcTccCoordinatedEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnDisconnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (*GrpcAck, error)
}

type tccEventServiceClient struct {
	cc *grpc.ClientConn
}

func NewTccEventServiceClient(cc *grpc.ClientConn) TccEventServiceClient {
	return &tccEventServiceClient{cc}
}

func (c *tccEventServiceClient) OnConnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (TccEventService_OnConnectedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TccEventService_serviceDesc.Streams[0], "/TccEventService/OnConnected", opts...)
	if err != nil {
		return nil, err
	}
	x := &tccEventServiceOnConnectedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TccEventService_OnConnectedClient interface {
	Recv() (*GrpcTccCoordinateCommand, error)
	grpc.ClientStream
}

type tccEventServiceOnConnectedClient struct {
	grpc.ClientStream
}

func (x *tccEventServiceOnConnectedClient) Recv() (*GrpcTccCoordinateCommand, error) {
	m := new(GrpcTccCoordinateCommand)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *tccEventServiceClient) OnParticipationStarted(ctx context.Context, in *GrpcParticipationStartedEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnParticipationStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tccEventServiceClient) OnParticipationEnded(ctx context.Context, in *GrpcParticipationEndedEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnParticipationEnded", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tccEventServiceClient) OnTccTransactionStarted(ctx context.Context, in *GrpcTccTransactionStartedEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnTccTransactionStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tccEventServiceClient) OnTccTransactionEnded(ctx context.Context, in *GrpcTccTransactionEndedEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnTccTransactionEnded", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tccEventServiceClient) OnTccCoordinated(ctx context.Context, in *GrpcTccCoordinatedEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnTccCoordinated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tccEventServiceClient) OnDisconnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TccEventService/OnDisconnected", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TccEventServiceServer is the server API for TccEventService service.
type TccEventServiceServer interface {
	OnConnected(*GrpcServiceConfig, TccEventService_OnConnectedServer) error
	OnParticipationStarted(context.Context, *GrpcParticipationStartedEvent) (*GrpcAck, error)
	OnParticipationEnded(context.Context, *GrpcParticipationEndedEvent) (*GrpcAck, error)
	OnTccTransactionStarted(context.Context, *GrpcTccTransactionStartedEvent) (*GrpcAck, error)
	OnTccTransactionEnded(context.Context, *GrpcTccTransactionEndedEvent) (*GrpcAck, error)
	OnTccCoordinated(context.Context, *GrpcTccCoordinatedEvent) (*GrpcAck, error)
	OnDisconnected(context.Context, *GrpcServiceConfig) (*GrpcAck, error)
}

// UnimplementedTccEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTccEventServiceServer struct {
}

func (*UnimplementedTccEventServiceServer) OnConnected(req *GrpcServiceConfig, srv TccEventService_OnConnectedServer) error {
	return status.Errorf(codes.Unimplemented, "method OnConnected not implemented")
}
func (*UnimplementedTccEventServiceServer) OnParticipationStarted(ctx context.Context, req *GrpcParticipationStartedEvent) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnParticipationStarted not implemented")
}
func (*UnimplementedTccEventServiceServer) OnParticipationEnded(ctx context.Context, req *GrpcParticipationEndedEvent) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnParticipationEnded not implemented")
}
func (*UnimplementedTccEventServiceServer) OnTccTransactionStarted(ctx context.Context, req *GrpcTccTransactionStartedEvent) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnTccTransactionStarted not implemented")
}
func (*UnimplementedTccEventServiceServer) OnTccTransactionEnded(ctx context.Context, req *GrpcTccTransactionEndedEvent) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnTccTransactionEnded not implemented")
}
func (*UnimplementedTccEventServiceServer) OnTccCoordinated(ctx context.Context, req *GrpcTccCoordinatedEvent) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnTccCoordinated not implemented")
}
func (*UnimplementedTccEventServiceServer) OnDisconnected(ctx context.Context, req *GrpcServiceConfig) (*GrpcAck, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnDisconnected not implemented")
}

func RegisterTccEventServiceServer(s *grpc.Server, srv TccEventServiceServer) {
	s.RegisterService(&_TccEventService_serviceDesc, srv)
}

func _TccEventService_OnConnected_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GrpcServiceConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TccEventServiceServer).OnConnected(m, &tccEventServiceOnConnectedServer{stream})
}

type TccEventService_OnConnectedServer interface {
	Send(*GrpcTccCoordinateCommand) error
	grpc.ServerStream
}

type tccEventServiceOnConnectedServer struct {
	grpc.ServerStream
}

func (x *tccEventServiceOnConnectedServer) Send(m *GrpcTccCoordinateCommand) error {
	return x.ServerStream.SendMsg(m)
}

func _TccEventService_OnParticipationStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcParticipationStartedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnParticipationStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnParticipationStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnParticipationStarted(ctx, req.(*GrpcParticipationStartedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TccEventService_OnParticipationEnded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcParticipationEndedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnParticipationEnded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnParticipationEnded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnParticipationEnded(ctx, req.(*GrpcParticipationEndedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TccEventService_OnTccTransactionStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcTccTransactionStartedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnTccTransactionStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnTccTransactionStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnTccTransactionStarted(ctx, req.(*GrpcTccTransactionStartedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TccEventService_OnTccTransactionEnded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcTccTransactionEndedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnTccTransactionEnded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnTccTransactionEnded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnTccTransactionEnded(ctx, req.(*GrpcTccTransactionEndedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TccEventService_OnTccCoordinated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcTccCoordinatedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnTccCoordinated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnTccCoordinated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnTccCoordinated(ctx, req.(*GrpcTccCoordinatedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TccEventService_OnDisconnected_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcServiceConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TccEventServiceServer).OnDisconnected(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TccEventService/OnDisconnected",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TccEventServiceServer).OnDisconnected(ctx, req.(*GrpcServiceConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _TccEventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TccEventService",
	HandlerType: (*TccEventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnParticipationStarted",
			Handler:    _TccEventService_OnParticipationStarted_Handler,
		},
		{
			MethodName: "OnParticipationEnded",
			Handler:    _TccEventService_OnParticipationEnded_Handler,
		},
		{
			MethodName: "OnTccTransactionStarted",
			Handler:    _TccEventService_OnTccTransactionStarted_Handler,
		},
		{
			MethodName: "OnTccTransactionEnded",
			Handler:    _TccEventService_OnTccTransactionEnded_Handler,
		},
		{
			MethodName: "OnTccCoordinated",
			Handler:    _TccEventService_OnTccCoordinated_Handler,
		},
		{
			MethodName: "OnDisconnected",
			Handler:    _TccEventService_OnDisconnected_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OnConnected",
			Handler:       _TccEventService_OnConnected_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "GrpcTccEvent.proto",
}

func (m *GrpcTccTransactionStartedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcTccTransactionStartedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcTccTransactionStartedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timestamp != 0 {
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrpcParticipationStartedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcParticipationStartedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcParticipationStartedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CancelMethod) > 0 {
		i -= len(m.CancelMethod)
		copy(dAtA[i:], m.CancelMethod)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.CancelMethod)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ConfirmMethod) > 0 {
		i -= len(m.ConfirmMethod)
		copy(dAtA[i:], m.ConfirmMethod)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ConfirmMethod)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timestamp != 0 {
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrpcParticipationEndedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcParticipationEndedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcParticipationEndedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.CancelMethod) > 0 {
		i -= len(m.CancelMethod)
		copy(dAtA[i:], m.CancelMethod)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.CancelMethod)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ConfirmMethod) > 0 {
		i -= len(m.ConfirmMethod)
		copy(dAtA[i:], m.ConfirmMethod)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ConfirmMethod)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timestamp != 0 {
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrpcTccTransactionEndedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcTccTransactionEndedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcTccTransactionEndedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timestamp != 0 {
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrpcTccCoordinatedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcTccCoordinatedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcTccCoordinatedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.MethodName) > 0 {
		i -= len(m.MethodName)
		copy(dAtA[i:], m.MethodName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.MethodName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.InstanceId) > 0 {
		i -= len(m.InstanceId)
		copy(dAtA[i:], m.InstanceId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.InstanceId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timestamp != 0 {
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GrpcTccCoordinateCommand) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GrpcTccCoordinateCommand) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GrpcTccCoordinateCommand) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Method) > 0 {
		i -= len(m.Method)
		copy(dAtA[i:], m.Method)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.Method)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ParentTxId) > 0 {
		i -= len(m.ParentTxId)
		copy(dAtA[i:], m.ParentTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.ParentTxId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LocalTxId) > 0 {
		i -= len(m.LocalTxId)
		copy(dAtA[i:], m.LocalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.LocalTxId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.GlobalTxId) > 0 {
		i -= len(m.GlobalTxId)
		copy(dAtA[i:], m.GlobalTxId)
		i = encodeVarintGrpcTccEvent(dAtA, i, uint64(len(m.GlobalTxId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGrpcTccEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovGrpcTccEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GrpcTccTransactionStartedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGrpcTccEvent(uint64(m.Timestamp))
	}
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcParticipationStartedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGrpcTccEvent(uint64(m.Timestamp))
	}
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ConfirmMethod)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.CancelMethod)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcParticipationEndedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGrpcTccEvent(uint64(m.Timestamp))
	}
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ConfirmMethod)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.CancelMethod)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcTccTransactionEndedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGrpcTccEvent(uint64(m.Timestamp))
	}
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcTccCoordinatedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != 0 {
		n += 1 + sovGrpcTccEvent(uint64(m.Timestamp))
	}
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.InstanceId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.MethodName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GrpcTccCoordinateCommand) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.GlobalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.LocalTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ParentTxId)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovGrpcTccEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGrpcTccEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGrpcTccEvent(x uint64) (n int) {
	return sovGrpcTccEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GrpcTccTransactionStartedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcTccTransactionStartedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcTccTransactionStartedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcParticipationStartedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcParticipationStartedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcParticipationStartedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfirmMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcParticipationEndedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcParticipationEndedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcParticipationEndedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfirmMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CancelMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcTccTransactionEndedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcTccTransactionEndedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcTccTransactionEndedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcTccCoordinatedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcTccCoordinatedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcTccCoordinatedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MethodName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MethodName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GrpcTccCoordinateCommand) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GrpcTccCoordinateCommand: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GrpcTccCoordinateCommand: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GlobalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTxId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTxId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGrpcTccEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGrpcTccEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGrpcTccEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGrpcTccEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGrpcTccEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGrpcTccEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGrpcTccEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGrpcTccEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGrpcTccEvent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGrpcTccEvent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGrpcTccEvent = fmt.Errorf("proto: unexpected end of group")
)
